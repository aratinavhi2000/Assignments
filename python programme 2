{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "eecb6ee0-8c36-47d5-8901-0059592967af",
   "metadata": {},
   "source": [
    "### Write a Python program to convert kilometers to miles?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b996b049-4076-4385-97d0-ee904f7452c2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter the value in KM  2\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2.0 KM = 1.242742 Miles\n"
     ]
    }
   ],
   "source": [
    "unit = 0.621371\n",
    "km = float(input(\"Enter the value in KM \"))\n",
    "print(f'{km} KM = {km*unit} Miles')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48605435-6dd2-49aa-9a8d-16bffe500fcf",
   "metadata": {},
   "source": [
    "### Write a Python program to convert Celsius to Fahrenheit?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "967861cd-1d61-4887-8247-290d68b1a6f2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter temperature in celcious 35\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "35.0 C = 95.0 F\n"
     ]
    }
   ],
   "source": [
    "c = float(input(\"Enter temperature in celcious\"))\n",
    "f = c*(9/5) + 32\n",
    "print(f\"{c} C = {f} F\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8c4cf8f1-bc1c-40d4-a36c-8fb229df514c",
   "metadata": {},
   "source": [
    "### Write a Python program to display calendar?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5fa0bd2d-ed35-4ef0-9f93-39c7bf45122f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter the year: 2000\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                  2000\n",
      "\n",
      "      January                   February                   March\n",
      "Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su\n",
      "                1  2          1  2  3  4  5  6             1  2  3  4  5\n",
      " 3  4  5  6  7  8  9       7  8  9 10 11 12 13       6  7  8  9 10 11 12\n",
      "10 11 12 13 14 15 16      14 15 16 17 18 19 20      13 14 15 16 17 18 19\n",
      "17 18 19 20 21 22 23      21 22 23 24 25 26 27      20 21 22 23 24 25 26\n",
      "24 25 26 27 28 29 30      28 29                     27 28 29 30 31\n",
      "31\n",
      "\n",
      "       April                      May                       June\n",
      "Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su\n",
      "                1  2       1  2  3  4  5  6  7                1  2  3  4\n",
      " 3  4  5  6  7  8  9       8  9 10 11 12 13 14       5  6  7  8  9 10 11\n",
      "10 11 12 13 14 15 16      15 16 17 18 19 20 21      12 13 14 15 16 17 18\n",
      "17 18 19 20 21 22 23      22 23 24 25 26 27 28      19 20 21 22 23 24 25\n",
      "24 25 26 27 28 29 30      29 30 31                  26 27 28 29 30\n",
      "\n",
      "        July                     August                  September\n",
      "Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su\n",
      "                1  2          1  2  3  4  5  6                   1  2  3\n",
      " 3  4  5  6  7  8  9       7  8  9 10 11 12 13       4  5  6  7  8  9 10\n",
      "10 11 12 13 14 15 16      14 15 16 17 18 19 20      11 12 13 14 15 16 17\n",
      "17 18 19 20 21 22 23      21 22 23 24 25 26 27      18 19 20 21 22 23 24\n",
      "24 25 26 27 28 29 30      28 29 30 31               25 26 27 28 29 30\n",
      "31\n",
      "\n",
      "      October                   November                  December\n",
      "Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su\n",
      "                   1             1  2  3  4  5                   1  2  3\n",
      " 2  3  4  5  6  7  8       6  7  8  9 10 11 12       4  5  6  7  8  9 10\n",
      " 9 10 11 12 13 14 15      13 14 15 16 17 18 19      11 12 13 14 15 16 17\n",
      "16 17 18 19 20 21 22      20 21 22 23 24 25 26      18 19 20 21 22 23 24\n",
      "23 24 25 26 27 28 29      27 28 29 30               25 26 27 28 29 30 31\n",
      "30 31\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from calendar import calendar\n",
    "year = int(input(\"Enter the year:\"))\n",
    "print(calendar(year))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4fc2594e-97cd-4acf-868e-54dfd18ae237",
   "metadata": {},
   "source": [
    "### Write a Python program to solve quadratic equation?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "81f335f4-c505-42a4-88cf-d20e52c2990e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Ax^2 + Bx + C = 0\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter the value of A:  1\n",
      "Enter the value of B:  4\n",
      "Enter the value of C:  4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Solutions are (-2+0j) and (-2+0j)\n"
     ]
    }
   ],
   "source": [
    "import cmath\n",
    "\n",
    "print(\"Ax^2 + Bx + C = 0\")\n",
    "a = float(input(\"Enter the value of A: \"))\n",
    "b = float(input(\"Enter the value of B: \"))\n",
    "c = float(input(\"Enter the value of C: \"))\n",
    "\n",
    "d = (b**2) - (4*a*c)\n",
    "sol1 = (-b - cmath.sqrt(d))/(2*a)\n",
    "sol2 = (-b + cmath.sqrt(d))/(2*a)\n",
    "print(f\"Solutions are {sol1} and {sol2}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "42338e28-5bdb-47e3-94f3-73280b0b4187",
   "metadata": {},
   "source": [
    "### Write a Python program to swap two variables without temp variable?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d33c6dbf-ec87-4d8f-9d6b-661736e84144",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter the value of A  2\n",
      "Enter the value of B  3\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Before swaping A=2 B=3\n",
      "After swaping A=3 B=2\n"
     ]
    }
   ],
   "source": [
    "a = int(input(\"Enter the value of A \"))\n",
    "b = int(input(\"Enter the value of B \"))\n",
    "print(f\"Before swaping A={a} B={b}\")\n",
    "a,b = b,a\n",
    "print(f\"After swaping A={a} B={b}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "2939ab8e-fd77-402e-a294-9940ceefca93",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter the value of A  3\n",
      "Enter the value of B  4\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Before swaping A=3 B=4\n",
      "After swaping A=4 B=3\n"
     ]
    }
   ],
   "source": [
    "a = int(input(\"Enter the value of A \"))\n",
    "b = int(input(\"Enter the value of B \"))\n",
    "print(f\"Before swaping A={a} B={b}\")\n",
    "a = a+b\n",
    "b = a-b\n",
    "a = a-b\n",
    "print(f\"After swaping A={a} B={b}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2bfb89f4-1459-4066-87e5-41aa4d577868",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
